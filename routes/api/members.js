const express = require('express');
const members = require('../../members')
const router = express.Router();
const uuid = require('uuid');//normally id is generated by the database but we are not using database
//get single member

router.get('/:id', (req, res)=>{   
    const found = members.some(member => { //if there are members that fit the callback, then const found is true else false
        return member.id === parseInt(req.params.id);
    })
    if (found){
        res.json(members.filter(member => {
            return member.id === parseInt(req.params.id)
            })
        );
    } else {
        //res.send('Not found')
        res.status(400).json({msg: `No member with the id of ${req.params.id}`})
    }
    
})

//gets all members json
router.get('/', (req, res) => {
    //res.send('Hello');
    //res.json(members);//you don't have to convert to json because res.json does it for you
    //res.sendFile(path.join(__dirname, "data.json"))
    res.json(members)
})

router.delete('/:id', (req, res) => {
    const found = members.some(member => { //if there are members that fit the callback, then const found is true else false
        return member.id === parseInt(req.params.id);
    })
    var newMembers = members.filter(member => member.id != req.params.id)
    res.json(newMembers)
    //should have erro handling and use found
    //and did not change members
})
//use put to update member
//creating member
router.post('/', (req,res)=>{
    const newMember = {
        id:uuid.v4(),
        name: req.body.name,
        email: req.body.email,
        status: "active"
    };
    if (!newMember.name || !newMember.email){
        return res.status(400).json({msg: 'Please inlude name and email.'})
    } else {
        members.push(newMember);
        //res.json(members); //for api
        res.redirect('/')
    }
    
});
module.exports = router;